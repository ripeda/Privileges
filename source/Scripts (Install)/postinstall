#!/bin/bash

# postinstall.sh
# Marc Thielemann, 2020/01/21

exitCode=0

helperPath="$3/Applications/Privileges.app/Contents/XPCServices/PrivilegesXPC.xpc/Contents/Library/LaunchServices/com.ripeda.privileges.helper"

if [[ -f "$helperPath" ]]; then

	# create the target directory if needed
	if [[ ! -d "$3/Library/PrivilegedHelperTools" ]]; then
		/bin/mkdir -p "$3/Library/PrivilegedHelperTools"
		/bin/chmod 755 "$3/Library/PrivilegedHelperTools"
		/usr/sbin/chown -R root:wheel "$3/Library/PrivilegedHelperTools"
	fi

	# move the privileged helper into place
	/bin/cp -f "$helperPath" "$3/Library/PrivilegedHelperTools"

	if [[ $? -eq 0 ]]; then
		/bin/chmod 755 "$3/Library/PrivilegedHelperTools/com.ripeda.privileges.helper"

		# create the launchd plist
		helperPlistPath="$3/Library/LaunchDaemons/com.ripeda.privileges.helper.plist"

		/bin/cat > "$helperPlistPath" << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD helperPlistPath 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Label</key>
	<string>com.ripeda.privileges.helper</string>
	<key>MachServices</key>
	<dict>
		<key>com.ripeda.privileges.helper</key>
		<true/>
	</dict>
	<key>ProgramArguments</key>
	<array>
		<string>/Library/PrivilegedHelperTools/com.ripeda.privileges.helper</string>
	</array>
</dict>
</plist>
EOF

		/bin/chmod 644 "$helperPlistPath"

		# load the launchd plist only if installing on the boot volume
		if [[ "$3" = "/" ]]; then
			/bin/launchctl bootstrap system "$helperPlistPath"
		fi

		# restart the Dock if Privileges is in there. This ensures proper loading
		# of the (updated) Dock tile plug-in

		# get the currently logged-in user and go ahead if it's not root
		currentUser=$(/bin/ls -l /dev/console | /usr/bin/awk '{ print $3 }')

		if [[ -n "$currentUser" && "$currentUser" != "root" ]]; then
			if [[ -n $(/usr/bin/sudo -u "$currentUser" /usr/bin/defaults read com.apple.dock "persistent-apps" | /usr/bin/grep "/Applications/Privileges.app") ]]; then
				/usr/bin/killall Dock
			fi
		fi

		# make sure PrivilegesCLI can be accessed without specifying the full path
		echo "/Applications/Privileges.app/Contents/Resources" > "$3/private/etc/paths.d/PrivilegesCLI"

	else
		exitCode=1
	fi
else
	exitCode=1
fi


# Next handle 'com.ripeda.privileges-watchdog.auto-start.plist'
# Will already be in place, just need to set permissions and load it
watchdogPlistPath="$3/Library/LaunchAgents/com.ripeda.privileges-watchdog.auto-start.plist"
/bin/chmod 644 "$watchdogPlistPath"
/bin/launchctl bootstrap system "$watchdogPlistPath"

# Finally add the app to dock
# Based off of LGharrison's 'Dock Setup.sh' script
__dock_item() {
    printf '%s%s%s%s%s' \
           '<dict><key>tile-data</key><dict><key>file-data</key><dict>' \
           '<key>_CFURLString</key><string>' \
           "$1" \
           '</string><key>_CFURLStringType</key><integer>0</integer>' \
           '</dict></dict></dict>'
}

# check if app is not already in dock
result=$( sudo -u "$currentUser" defaults read com.apple.dock persistent-apps | grep -c "Privileges.app" )

if [[ $result -eq 0 ]]; then
	currentUser=$( echo "show State:/Users/ConsoleUser" | scutil | awk '/Name :/ { print $3 }' )
	sudo -u "$currentUser" defaults write com.apple.dock \
				persistent-apps -array-add \
							"$(__dock_item /Applications/Privileges.app)" \

	killall Dock
fi

exit $exitCode